openapi: 3.1.0
info:
  title: Ai知识服务后端
  version: "0.1"
servers:
- url: http://localhost:9876
  description: Generated server url
tags:
- name: 屏蔽管理
  description: 屏蔽相关接口
- name: 用户组服务
  description: 用户组相关接口
- name: ai助手管理
  description: ai助手相关接口
- name: 文档管理
  description: 文档相关接口
- name: 对话管理
  description: 对话相关接口
- name: 知识库管理
  description: 知识库相关接口
- name: 用户服务
  description: 用户相关接口
- name: 临时文件管理
  description: 临时文件相关接口
- name: 认证服务
  description: 用户认证相关接口
paths:
  /api/v1/user_groups/{id}:
    put:
      tags:
      - 用户组服务
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserGroup"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseUserGroupInfo"
      security:
      - auth: []
    delete:
      tags:
      - 用户组服务
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/knowledge_base:
    put:
      tags:
      - 知识库管理
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateKnowledgeBase"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseKnowledgeBaseVo"
      security:
      - auth: []
    post:
      tags:
      - 知识库管理
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKnowledgeBase"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseKnowledgeBaseVo"
      security:
      - auth: []
  /api/v1/documents/{id}/replace:
    put:
      tags:
      - 文档管理
      operationId: replace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseReplaceResult"
      security:
      - auth: []
  /api/v1/documents/{id}/rename:
    put:
      tags:
      - 文档管理
      operationId: rename
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: name
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/blocked_words:
    put:
      tags:
      - 屏蔽管理
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBlockedWord"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseBlockedWordVo"
      security:
      - auth: []
    post:
      tags:
      - 屏蔽管理
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBlockedWord"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseBlockedWordVo"
      security:
      - auth: []
  /api/v1/assistants:
    put:
      tags:
      - ai助手管理
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantUpdateParam"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseAssistantVo"
      security:
      - auth: []
    post:
      tags:
      - ai助手管理
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantCreateParam"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseAssistantVo"
      security:
      - auth: []
  /api/v1/users:
    post:
      tags:
      - 用户服务
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseUserInfo"
      security:
      - auth: []
  /api/v1/users/search:
    post:
      tags:
      - 用户服务
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchUsers"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoUserInfo"
      security:
      - auth: []
  /api/v1/users/import:
    post:
      tags:
      - 用户服务
      operationId: importByXlsx
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/ImportUsers"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseInteger"
      security:
      - auth: []
  /api/v1/user_groups:
    post:
      tags:
      - 用户组服务
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserGroup"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseUserGroupInfo"
      security:
      - auth: []
  /api/v1/user_groups/search:
    post:
      tags:
      - 用户组服务
      operationId: search_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchUserGroups"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoUserGroupInfo"
      security:
      - auth: []
  /api/v1/user_groups/delete_user:
    post:
      tags:
      - 用户组服务
      operationId: delUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddUser"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/user_groups/add_user:
    post:
      tags:
      - 用户组服务
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddUser"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/tmpfile:
    post:
      tags:
      - 临时文件管理
      description: 临时文件上传接口
      operationId: upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - files
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseListUploadResult"
      security:
      - auth: []
  /api/v1/knowledge_base/search:
    post:
      tags:
      - 知识库管理
      operationId: search_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchKnowledgeBase"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoKnowledgeBaseVo"
      security:
      - auth: []
  /api/v1/documents/upload:
    post:
      tags:
      - 文档管理
      operationId: upload_1
      parameters:
      - name: baseId
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - files
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseSaveResult"
      security:
      - auth: []
  /api/v1/documents/search:
    post:
      tags:
      - 文档管理
      operationId: search_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDocument"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoDocumentVo"
      security:
      - auth: []
  /api/v1/documents/blocked_document/search:
    post:
      tags:
      - 文档管理
      operationId: searchBlocked
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDocument"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoDocumentVo"
      security:
      - auth: []
  /api/v1/chat/conversations/search:
    post:
      tags:
      - 对话管理
      operationId: search_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchConversation"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoConversationVo"
      security:
      - auth: []
  /api/v1/chat/conversations/messages/search:
    post:
      tags:
      - 对话管理
      operationId: messages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchMessage"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoMessageVo"
      security:
      - auth: []
  /api/v1/chat/conversations/chat_with_assistant:
    post:
      tags:
      - 对话管理
      operationId: newChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssistantChatParam"
        required: true
      responses:
        "400":
          description: BAD Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizError"
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                anyOf:
                - $ref: "#/components/schemas/RetrievedContent"
                - $ref: "#/components/schemas/PartialMessage"
                - $ref: "#/components/schemas/Finish"
      security:
      - auth: []
  /api/v1/chat/conversations/chat:
    post:
      tags:
      - 对话管理
      operationId: newChat_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatParam"
        required: true
      responses:
        "400":
          description: BAD Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BizError"
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                anyOf:
                - $ref: "#/components/schemas/RetrievedContent"
                - $ref: "#/components/schemas/PartialMessage"
                - $ref: "#/components/schemas/Finish"
      security:
      - auth: []
  /api/v1/blocked_words/search:
    post:
      tags:
      - 屏蔽管理
      operationId: search_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchBlockedWord"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoBlockedWordVo"
      security:
      - auth: []
  /api/v1/auth/register:
    post:
      tags:
      - 认证服务
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseUserInfo"
  /api/v1/auth/login:
    post:
      tags:
      - 认证服务
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseLoginResult"
  /api/v1/assistants/search:
    post:
      tags:
      - ai助手管理
      operationId: search_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchAssistant"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponsePageVoAssistantVo"
      security:
      - auth: []
  /test/chat:
    get:
      tags:
      - test-controller
      operationId: chat
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /test/chat/stream:
    get:
      tags:
      - test-controller
      operationId: chatStream
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/SseEmitter"
  /api/v1/blocked_words/all:
    get:
      tags:
      - 屏蔽管理
      operationId: all
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseListBlockedWordVo"
      security:
      - auth: []
  /api/v1/assistants/{id}/detail:
    get:
      tags:
      - ai助手管理
      operationId: search_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseAssistantDetailVo"
      security:
      - auth: []
  /api/v1/users/{id}:
    delete:
      tags:
      - 用户服务
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/knowledge_base/{id}:
    delete:
      tags:
      - 知识库管理
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/documents/{id}:
    delete:
      tags:
      - 文档管理
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/blocked_words/{id}:
    delete:
      tags:
      - 屏蔽管理
      operationId: delete_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/blocked_words/{id}/enable:
    delete:
      tags:
      - 屏蔽管理
      operationId: enable
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/blocked_words/{id}/disable:
    delete:
      tags:
      - 屏蔽管理
      operationId: disable
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
  /api/v1/assistants/{id}:
    delete:
      tags:
      - ai助手管理
      operationId: delete_5
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEmpty"
      security:
      - auth: []
components:
  schemas:
    JsonNode:
      type: object
    UpdateUserGroup:
      type: object
      properties:
        description:
          type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
    ResponseUserGroupInfo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/UserGroupInfo"
    UserGroupInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        userCount:
          type: integer
          format: int32
        creatorName:
          type: string
        description:
          type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    UpdateKnowledgeBase:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        embedModel:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
    KnowledgeBaseVo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        creator:
          type: string
        creatorName:
          type: string
        docCount:
          type: integer
          format: int32
        ext:
          $ref: "#/components/schemas/JsonNode"
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    ResponseKnowledgeBaseVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/KnowledgeBaseVo"
    DocumentVo:
      type: object
      properties:
        id:
          type: string
        baseId:
          type: string
        title:
          type: string
        fileName:
          type: string
        url:
          type: string
        creator:
          type: string
        creatorName:
          type: string
        blockedReason:
          type: string
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    ReplaceResult:
      type: object
      properties:
        replaced:
          $ref: "#/components/schemas/DocumentVo"
        unknown:
          $ref: "#/components/schemas/Unknown"
    ResponseReplaceResult:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/ReplaceResult"
    Unknown:
      type: object
      properties:
        fileName:
          type: string
        contentType:
          type: string
    Empty:
      type: object
    ResponseEmpty:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/Empty"
    UpdateBlockedWord:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
    BlockedWordVo:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
        enabled:
          type: boolean
        createTime:
          type: integer
          format: int64
    ResponseBlockedWordVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/BlockedWordVo"
    AssistantUpdateParam:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        llmModel:
          type: string
        systemPrompt:
          type: string
        description:
          type: string
        baseIds:
          type: array
          items:
            type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
    AssistantVo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        llmModel:
          type: string
        systemPrompt:
          type: string
        permit:
          type: integer
          format: int32
        description:
          type: string
        creator:
          type: string
        creatorName:
          type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    ResponseAssistantVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/AssistantVo"
    CreateUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ResponseUserInfo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/UserInfo"
    UserInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    SearchUsers:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        groupId:
          type: string
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    PageVoUserInfo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/UserInfo"
    ResponsePageVoUserInfo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoUserInfo"
    ImportUsers:
      type: object
      properties:
        xlsx:
          type: string
          format: binary
    ResponseInteger:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          type: integer
          format: int32
    CreateUserGroup:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
    SearchUserGroups:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    PageVoUserGroupInfo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/UserGroupInfo"
    ResponsePageVoUserGroupInfo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoUserGroupInfo"
    AddUser:
      type: object
      properties:
        groupId:
          type: string
        userId:
          type: string
    ResponseListUploadResult:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/UploadResult"
    UploadResult:
      type: object
      properties:
        url:
          type: string
        id:
          type: string
        fileName:
          type: string
    CreateKnowledgeBase:
      type: object
      properties:
        name:
          type: string
        embedModel:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        permit:
          type: integer
          format: int32
          description: 1-私密 2-团队 3-公开
        ext:
          $ref: "#/components/schemas/JsonNode"
    SearchKnowledgeBase:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    PageVoKnowledgeBaseVo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/KnowledgeBaseVo"
    ResponsePageVoKnowledgeBaseVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoKnowledgeBaseVo"
    ResponseSaveResult:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/SaveResult"
    SaveResult:
      type: object
      properties:
        saved:
          type: array
          items:
            $ref: "#/components/schemas/DocumentVo"
        unknowns:
          type: array
          items:
            $ref: "#/components/schemas/Unknown"
    SearchDocument:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        baseId:
          type: string
          description: 知识库id
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    PageVoDocumentVo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/DocumentVo"
    ResponsePageVoDocumentVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoDocumentVo"
    SearchConversation:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    ConversationVo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        creator:
          type: string
        creatorName:
          type: string
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    PageVoConversationVo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/ConversationVo"
    ResponsePageVoConversationVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoConversationVo"
    SearchMessage:
      type: object
      properties:
        conversationId:
          type: string
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    MessageVo:
      type: object
      properties:
        id:
          type: string
        conversationId:
          type: string
        query:
          type: string
        answer:
          type: string
        files:
          $ref: "#/components/schemas/QueryContext"
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
    PageVoMessageVo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/MessageVo"
    QueryContext:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/RetrievalResource"
        files:
          type: array
          items:
            $ref: "#/components/schemas/UploadResult"
    ResponsePageVoMessageVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoMessageVo"
    RetrievalResource:
      type: object
      properties:
        documentId:
          type: string
        fileName:
          type: string
        url:
          type: string
    AssistantChatParam:
      type: object
      properties:
        conversationId:
          type: string
        query:
          type: string
        assistantId:
          type: string
        files:
          type: array
          items:
            $ref: "#/components/schemas/UploadResult"
    BizError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
    RetrievedContent:
      type: object
      properties:
        conversationId:
          type: string
        ctx:
          $ref: "#/components/schemas/QueryContext"
    PartialMessage:
      type: object
      properties:
        conversationId:
          type: string
        text:
          type: string
    ChatResponseMetadata:
      type: object
    Finish:
      type: object
      properties:
        conversationId:
          type: string
        metadata:
          $ref: "#/components/schemas/ChatResponseMetadata"
    ChatParam:
      type: object
      properties:
        conversationId:
          type: string
        query:
          type: string
        llmModel:
          type: string
        baseIds:
          type: array
          items:
            type: string
        files:
          type: array
          items:
            $ref: "#/components/schemas/UploadResult"
    CreateBlockedWord:
      type: object
      properties:
        value:
          type: string
    SearchBlockedWord:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
    PageVoBlockedWordVo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/BlockedWordVo"
    ResponsePageVoBlockedWordVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoBlockedWordVo"
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResult:
      type: object
      properties:
        info:
          $ref: "#/components/schemas/UserInfo"
        token:
          type: string
    ResponseLoginResult:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/LoginResult"
    AssistantCreateParam:
      type: object
      properties:
        name:
          type: string
        llmModel:
          type: string
        systemPrompt:
          type: string
        permit:
          type: integer
          format: int32
        description:
          type: string
        baseIds:
          type: array
          items:
            type: string
        creator:
          type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
    SearchAssistant:
      type: object
      properties:
        key:
          type: string
          description: 按名字检索
        pageNo:
          type: integer
          format: int32
          default: "1"
          description: 从1开始
        pageSize:
          type: integer
          format: int32
          default: "20"
        sort:
          type: string
          enum:
          - CREATED_AT_ASC
          - CREATED_AT_DESC
          - UPDATED_AT_ASC
          - UPDATED_AT_DESC
    PageVoAssistantVo:
      type: object
      properties:
        total:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        pageNo:
          type: integer
          format: int64
        records:
          type: array
          items:
            $ref: "#/components/schemas/AssistantVo"
    ResponsePageVoAssistantVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/PageVoAssistantVo"
    SseEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    ResponseListBlockedWordVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/BlockedWordVo"
    AssistantDetailVo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        llmModel:
          type: string
        systemPrompt:
          type: string
        permit:
          type: integer
          format: int32
        description:
          type: string
        creator:
          type: string
        creatorName:
          type: string
        ext:
          $ref: "#/components/schemas/JsonNode"
        createTime:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
        bases:
          type: array
          items:
            $ref: "#/components/schemas/BaseInfo"
    BaseInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ResponseAssistantDetailVo:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          $ref: "#/components/schemas/AssistantDetailVo"
  securitySchemes:
    auth:
      type: apiKey
      name: auth
      in: header
